name: "build-and-deploy-apm"
on:
  push:
    tags:
      # 只有有tag的时候才触发部署操作
      - 'v*'

jobs:
  build-and-push-image:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          submodules: 'recursive'

      - name: Get version from tag
        id: vars
        run: echo "tag=${GITHUB_REF/refs\/tags\//}" >> $GITHUB_OUTPUT

      - name: Set up Graal JDK 21
        uses: graalvm/setup-graalvm@v1
        with:
          java-version: '21'      # See 'Options' section below for all supported versions
          distribution: 'graalvm' # See 'Options' section below for all available distributions
          version: '21.0.2'
          github-token: ${{ secrets.GITHUB_TOKEN }}
          cache: 'maven'

      - name: Build with Maven
        run: mvn -Dmaven.test.skip=true clean package

      - name: Unzip package
        run: tar -zxvf build/arktouros-apm-api-leaves.tar.gz -C build/

      #      - name: 传输部署脚本到服务器
      #        run: |
      #          sshpass -p ${{secrets.REMOTE_PWD}} scp -r -o StrictHostKeyChecking=no arktouros-apm/arktouros-apm-api/src/main/resources/run.sh root@${{secrets.REMOTE_IP}}:/root/arktouros


      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Set up Docker BuildX
        uses: docker/setup-buildx-action@v3

      - name: Build and push Apm
        id: docker_build_apm
        uses: docker/build-push-action@v4
        with:
          context: .
          file: ./Dockerfile-apm
          push: true
          platforms: linux/amd64,linux/arm64
          tags: |
            ${{ secrets.DOCKERHUB_USERNAME }}/arktouros-apm-server:${{ steps.vars.outputs.tag }} 
            ${{ secrets.DOCKERHUB_USERNAME }}/arktouros-apm-server:latest

  deploy_on_remote:
    runs-on: ubuntu-latest
    needs: build-and-push-image
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          submodules: 'recursive'

#      - name: 传输apm-config文件夹到服务器
#        run: |
#          sshpass -p ${{secrets.REMOTE_PWD}} scp -r -o StrictHostKeyChecking=no arktouros-apm/arktouros-apm-api/src/main/resources root@${{secrets.REMOTE_IP}}:/root/arktouros/apm/config
#
#      - name: 传输webapp-config文件夹到服务器
#        run: |
#          sshpass -p ${{secrets.REMOTE_PWD}} scp -r -o StrictHostKeyChecking=no arktouros-webapp/src/main/resources root@${{secrets.REMOTE_IP}}:/root/arktouros/ui/config

      - name: 传输docker-compose到服务器
        run: >
          sshpass -p ${{secrets.REMOTE_PWD}} 
          scp -r -o StrictHostKeyChecking=no deploy/docker-compose.yaml 
          root@${{secrets.REMOTE_IP}}:/root/arktouros

      - name: 传输部署脚本到服务器
        run: >
          sshpass -p ${{secrets.REMOTE_PWD}} 
          scp -r -o StrictHostKeyChecking=no deploy/run-backend.sh 
          root@${{secrets.REMOTE_IP}}:/root/arktouros

      - name: 授权并执行部署脚本
        run: >
          sshpass -p ${{secrets.REMOTE_PWD}} 
          ssh -o StrictHostKeyChecking=no root@${{secrets.REMOTE_IP}} 
          "chmod +x /root/arktouros/run-backend.sh && /root/arktouros/run-backend.sh"

  analyze_with_sonarqube:
    name: analyze with sonarqube
    runs-on: ubuntu-latest
    # 用新代码跑UT
    permissions: read-all
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          submodules: 'recursive'

      - name: Set up Graal JDK 21
        uses: graalvm/setup-graalvm@v1
        with:
          java-version: '21'      # See 'Options' section below for all supported versions
          distribution: 'graalvm' # See 'Options' section below for all available distributions
          version: '21.0.2'
          github-token: ${{ secrets.GITHUB_TOKEN }}
          cache: 'maven'

      - name: Cache SonarQube packages
        uses: actions/cache@v1
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar

      - name: Cache Maven packages
        uses: actions/cache@v1
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2

      - name: Build and analyze
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
          ELASTICSEARCH_SERVERURL: ${{ secrets.ELASTICSEARCH_SERVERURL }}
          ELASTICSEARCH_PASSWORD: ${{ secrets.ELASTICSEARCH_PASSWORD }}
          ELASTICSEARCH_CA: ${{ secrets.ELASTICSEARCH_CA }}
        # UT报错不阻塞sonar扫描
        run: >
          mvn -B clean verify org.sonarsource.scanner.maven:sonar-maven-plugin:sonar 
          -Dsonar.coverage.jacoco.xmlReportPaths=./arktouros-jacoco-aggregation/target/site/jacoco-aggregate/jacoco.xml
          -Dsonar.projectKey=WangMinan_Arktouros_5cf7fce8-6c16-4aef-b255-7105807485bf 
          -Dsonar.projectName='Arktouros' -Pcoverage
